name: Production Subgraph (Mainnet)

on:
  workflow_call:
    inputs:
      ENVIRONMENT:
        required: false
        type: string
        default: 'testnet'
      CONFIG:
        required: true
        type: string
        default: mainnetAddressScript.ts
    secrets:
      NODE_AUTH_TOKEN:
        required: true
      ACCESS_TOKEN:
        required: true

jobs:
  template-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Set arbitrum staging environment variables
        if: ${{ inputs.ENVIRONMENT == 'staging-arbitrum' }}
        run: |
          echo "ENV_SUFFIX=-arbitrum-staging" >> $GITHUB_ENV

      - name: Set mainnet staging environment variables
        if: ${{ inputs.ENVIRONMENT == 'staging-mainnet' }}
        run: |
          echo "ENV_SUFFIX=-mainnet-staging" >> $GITHUB_ENV

      - name: Set mainnet environment variables
        if: ${{ inputs.ENVIRONMENT == 'production' }}
        run: |
          echo "ENV_SUFFIX=-mainnet" >> $GITHUB_ENV

      - name: Set arbitrum environment variables
        if: ${{ inputs.ENVIRONMENT == 'production-arbitrum' }}
        run: |
          echo "ENV_SUFFIX=-arbitrum" >> $GITHUB_ENV

      - name: Set goerli production environment variables
        if: ${{ inputs.ENVIRONMENT == 'production-goerli' }}
        run: |
          echo "ENV_SUFFIX=-goerli" >> $GITHUB_ENV

      - name: Set arbitrum goerli production environment variables
        if: ${{ inputs.ENVIRONMENT == 'production-arbitrum-goerli' }}
        run: |
          echo "ENV_SUFFIX=-arbitrum-goerli" >> $GITHUB_ENV

      - name: Checkout
        uses: actions/checkout@v3

      # Install commands
      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '16'
          registry-url: https://registry.npmjs.org
      - name: yarn add ts-node
        run: yarn add ts-node
      - name: yarn install
        run: yarn install
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NODE_AUTH_TOKEN }}

      # Run scripts
      - name: Prepare IPFS enabled files
        run: ./node_modules/.bin/mustache ./config/ipfs.json ./src/mappings/helpers/metadata.template.ts > ./src/mappings/helpers/metadata.ts

      - name: Prepare addresses ${{ inputs.ENVIRONMENT }}
        run: ./node_modules/.bin/ts-node config/${{ inputs.CONFIG }} && ./node_modules/.bin/mustache ./config/generatedAddresses.json ./config/addresses.template.ts > ./config/addresses.ts

      - name: Prepare ${{ inputs.ENVIRONMENT }}
        run: ./node_modules/.bin/mustache ./config/generatedAddresses.json subgraph.template.yaml > subgraph.yaml && ./node_modules/@graphprotocol/graph-cli/dist/bin.js codegen --output-dir src/types/

      - name: Deploy to ${{ inputs.ENVIRONMENT }}
        run: ./node_modules/@graphprotocol/graph-cli/dist/bin.js deploy graphprotocol/graph-network${{ env.ENV_SUFFIX }} --ipfs https://api.thegraph.com/ipfs/ --node https://api.thegraph.com/deploy/ --access-token ${{ secrets.ACCESS_TOKEN }}
