specVersion: 0.0.2
description: The Graph Network Smart Contracts on Ethereum
repository: https://github.com/graphprotocol/contracts/graph-network-subgraph
schema:
  file: ./schema.graphql
dataSources:
  - kind: ethereum/contract
    name: GNS
    network: {{network}}
    source:
      address: '{{gns}}'
      abi: GNS
      startBlock: {{blockNumber}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.4
      language: wasm/assemblyscript
      file: ./src/mappings/gns.ts
      entities:
        - NamedSubgraph
        - SubgraphVersion
        - Subgraph
      abis:
        - name: GNS
          file: ./node_modules/@graphprotocol/contracts/dist/abis/GNS.json
        - name: ENS
          file: ./node_modules/@graphprotocol/contracts/dist/abis/IENS.json
        - name: ENSPublicResolver
          file: ./node_modules/@graphprotocol/contracts/dist/abis/IPublicResolver.json
      eventHandlers:
        - event: SubgraphPublished(address,uint256,bytes32,uint256,bytes32,string,bytes32)
          handler: handleSubgraphPublished
        - event: SubgraphDeprecated(address,uint256)
          handler: handleSubgraphDeprecated
  - kind: ethereum/contract
    name: ServiceRegistry
    network: {{network}}
    source:
      address: '{{serviceRegistry}}'
      abi: ServiceRegistry
      startBlock: {{blockNumber}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.4
      language: wasm/assemblyscript
      file: ./src/mappings/serviceRegistry.ts
      entities:
        - Indexer
      abis:
        - name: ServiceRegistry
          file: ./node_modules/@graphprotocol/contracts/dist/abis/ServiceRegistry.json
      eventHandlers:
        - event: ServiceRegistered(indexed address,string,string)
          handler: handleServiceRegistered
        - event: ServiceUnregistered(indexed address)
          handler: handleServiceUnregistered
  - kind: ethereum/contract
    name: Staking
    network: {{network}}
    source:
      address: '{{staking}}'
      abi: Staking
      startBlock: {{blockNumber}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.4
      language: wasm/assemblyscript
      file: ./src/mappings/staking.ts
      entities:
        - Channel
        - Indexer
        - Allocation
        - Subgraph
        - GraphNetwork
        - Pool
      abis:
        - name: Staking
          file: ./node_modules/@graphprotocol/contracts/dist/abis/Staking.json
        - name: GraphToken
          file: ./node_modules/@graphprotocol/contracts/dist/abis/GraphToken.json
        - name: EpochManager
          file: ./node_modules/@graphprotocol/contracts/dist/abis/EpochManager.json
      eventHandlers:
        - event: StakeDeposited(indexed address,uint256)
          handler: handleStakeDeposited
        - event: StakeWithdrawn(indexed address,uint256)
          handler: handleStakeWithdrawn
        - event: StakeLocked(indexed address,uint256,uint256)
          handler: handleStakeLocked
        - event: StakeSlashed(indexed address,uint256,uint256,address)
          handler: handleStakeSlashed          
        - event: AllocationCreated(indexed address,indexed bytes32,uint256,uint256,address,bytes,uint256)
          handler: handleAllocationCreated
        - event: AllocationCollected(indexed address,indexed bytes32,uint256,uint256,address,address,uint256,uint256)
          handler: handleAllocationCollected
        - event: AllocationSettled(indexed address,indexed bytes32,uint256,uint256,address,uint256)
          handler: handleAllocationSettled
        - event: RebateClaimed(indexed address,indexed bytes32,uint256,uint256,uint256,uint256,uint256)
          handler: handleRebateClaimed
        - event: ParameterUpdated(string)
          handler: handleParameterUpdated
        - event: DelegationParametersUpdated(indexed address,uint256,uint256,uint256)
          handler: handleDelegationParametersUpdated
        - event: StakeDelegated(indexed address,indexed address,uint256,uint256)
          handler: handleStakeDelegated
        - event: StakeUndelegated(indexed address,indexed address,uint256,uint256)
          handler: handleStakeUndelegated
  - kind: ethereum/contract
    name: Curation
    network: {{network}}
    source:
      address: '{{curation}}'
      abi: Curation
      startBlock: {{blockNumber}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.4
      language: wasm/assemblyscript
      file: ./src/mappings/curation.ts
      entities:
        - Curator
        - GraphNetwork
        - Signal
        - Subgraph
      abis:
        - name: Curation
          file: ./node_modules/@graphprotocol/contracts/dist/abis/Curation.json
      eventHandlers:
        - event: Staked(indexed address,indexed bytes32,uint256,uint256)
          handler: handleStaked
        - event: Redeemed(indexed address,indexed bytes32,uint256,uint256,uint256)
          handler: handleRedeemed
        - event: Collected(indexed bytes32,uint256)
          handler: handleCollected
        - event: ParameterUpdated(string)
          handler: handleParameterUpdated
  - kind: ethereum/contract
    name: GraphToken
    network: {{network}}
    source:
      address: '{{graphToken}}'
      abi: GraphToken
      startBlock: {{blockNumber}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.4
      language: wasm/assemblyscript
      file: ./src/mappings/graphToken.ts
      entities:
        - Account
        - GraphNetwork
      abis:
        - name: GraphToken
          file: ./node_modules/@graphprotocol/contracts/dist/abis/GraphToken.json
      eventHandlers:
        - event: Transfer(indexed address,indexed address,uint256)
          handler: handleTransfer
        - event: Approval(indexed address,indexed address,uint256)
          handler: handleApproval
  - kind: ethereum/contract
    name: EthereumDIDRegistry
    network: {{network}}
    source:
      address: '0xdCa7EF03e98e0DC2B855bE647C39ABe984fcF21B'
      abi: EthereumDIDRegistry
      startBlock: {{blockNumber}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.3
      language: wasm/assemblyscript
      file: ./src/mappings/ethereumDIDRegistry.ts
      entities:
        - GraphAccount
      abis:
        - name: EthereumDIDRegistry
          file: ./node_modules/@graphprotocol/contracts/dist/abis/EthereumDIDRegistry.json
      eventHandlers:
        - event: DIDOwnerChanged(indexed address,address,uint256)
          handler: handleDIDOwnerChanged
        - event: DIDDelegateChanged(indexed address,bytes32,address,uint256,uint256)
          handler: handleDIDDelegateChanged
        - event: DIDAttributeChanged(indexed address,bytes32,bytes,uint256,uint256)
          handler: handleDIDAttributeChanged
  - kind: ethereum/contract
    name: EpochManager
    network: {{network}}
    source:
      address: '{{graphToken}}'
      abi: EpochManager
      startBlock: {{blockNumber}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.4
      language: wasm/assemblyscript
      file: ./src/mappings/epochManager.ts
      entities:
        - TODO
      abis:
        - name: EpochManager
          file: ./node_modules/@graphprotocol/contracts/dist/abis/EpochManager.json
      eventHandlers:
        - event: EpochRun(indexed uint256,address)
          handler: handleEpochRun
        - event: EpochLengthUpdate(indexed uint256,uint256)
          handler: handleEpochLengthUpdate
